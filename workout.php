<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header('Location: index.html');
    exit;
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Workout Planner</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <h1 class="nav-logo">Workout Planner</h1>
            <ul class="nav-menu">
                <li class="nav-item"><a href="home.php" class="nav-link">Home</a></li>
                <li class="nav-item"><a href="workout.php" class="nav-link active">Workout Planner</a></li>
                <li class="nav-item"><a href="auth.php?action=logout" class="nav-link">Logout</a></li>
            </ul>
        </div>
    </nav>
    <div class="container">
        <h2>Weekly Workout Planner</h2>

        <!-- Workout Naming Section -->
        <div id="workout-naming">
            <select id="workout-selector"></select>
            <input type="text" id="new-workout-name" placeholder="Rename workout">
            <button id="rename-workout-btn" class="btn">Rename</button>
            <button id="new-workout-btn" class="btn">New Workout</button>
            <button id="delete-workout-btn" class="btn">Delete Workout</button>
        </div>

        <div class="calendar" id="workout-calendar">
            <!-- Calendar will be generated by JavaScript -->
        </div>

        <!-- Import and Download Buttons -->
        <div class="action-buttons">
            <label class="btn">
                Import Planner
                <input type="file" id="import-file" style="display: none;">
            </label>
            <button id="download-btn" class="btn">Download Planner</button>
        </div>

        <!-- Workout Modal -->
        <div id="workout-modal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h3>Add Workout for <span id="selected-day"></span></h3>
                <form id="workout-form">
                    <input type="hidden" id="day-index" name="day-index">
                    <div class="form-group">
                        <label for="workout-name">Workout Name</label>
                        <input type="text" id="workout-name" name="workout-name" required>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn">Save Workout</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Days of the week
        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        let workouts = {}; // Object to store weekly workout templates

        // Function to generate calendar
        function generateCalendar(selectedWorkout) {
            const calendar = document.getElementById('workout-calendar');
            calendar.innerHTML = '';
            const currentWorkout = workouts[selectedWorkout] || Array(7).fill([]); // Default to empty days
            days.forEach((day, index) => {
                const dayElement = document.createElement('div');
                dayElement.className = 'calendar-day';
                const dayHeader = document.createElement('div');
                dayHeader.className = 'day-header';
                dayHeader.textContent = day;
                dayElement.appendChild(dayHeader);
                const workoutList = document.createElement('div');
                workoutList.className = 'workout-list';
                workoutList.id = `day-${index}`;
                if (currentWorkout[index] && currentWorkout[index].length > 0) {
                    currentWorkout[index].forEach(workout => {
                        const workoutTag = document.createElement('div');
                        workoutTag.className = 'workout-tag';
                        workoutTag.textContent = workout;
                        workoutTag.onclick = function () {
                            removeWorkout(selectedWorkout, index, workout);
                        };
                        workoutList.appendChild(workoutTag);
                    });
                }
                dayElement.appendChild(workoutList);
                const addButton = document.createElement('button');
                addButton.className = 'add-workout-btn';
                addButton.textContent = '+ Add Workout';
                addButton.onclick = function() {
                    openWorkoutModal(selectedWorkout, day, index);
                };
                dayElement.appendChild(addButton);
                calendar.appendChild(dayElement);
            });
        }

        // Function to remove a workout (frontend-only)
        function removeWorkout(workoutName, dayIndex, workoutActivity) {
            if (!workouts[workoutName]) {
                alert('Workout template not found.');
                return;
            }
            if (!workouts[workoutName][dayIndex]) {
                alert('Day index not found.');
                return;
            }
            workouts[workoutName][dayIndex] = workouts[workoutName][dayIndex].filter(activity => activity !== workoutActivity);
            saveWorkoutsToBackend(); // Save changes to backend
            generateCalendar(workoutName);
        }

        // Function to update workout selector dropdown
        function updateWorkoutSelector() {
            const selector = document.getElementById('workout-selector');
            selector.innerHTML = '';
            Object.keys(workouts).sort().forEach(workoutName => {
                if (isNaN(workoutName)) {
                    const option = document.createElement('option');
                    option.value = workoutName;
                    option.textContent = workoutName;
                    selector.appendChild(option);
                }
            });
        }

        // Handle workout selector change
        document.getElementById('workout-selector').addEventListener('change', function () {
            const selectedWorkout = this.value;
            generateCalendar(selectedWorkout);
        });

        // Handle rename workout button
        document.getElementById('rename-workout-btn').addEventListener('click', function () {
            const newName = document.getElementById('new-workout-name').value;
            const oldName = document.getElementById('workout-selector').value;
            if (!newName || !oldName) return;
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'workout_functions.php', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function () {
                if (this.status === 200) {
                    const response = JSON.parse(this.responseText);
                    if (response.success) {
                        workouts = response.workouts;
                        updateWorkoutSelector();
                        generateCalendar(newName);
                    } else {
                        alert('Error renaming workout: ' + response.message);
                    }
                }
            };
            xhr.send(`action=rename_workout&old_name=${encodeURIComponent(oldName)}&new_name=${encodeURIComponent(newName)}`);
        });

        // Handle new workout button
        document.getElementById('new-workout-btn').addEventListener('click', function () {
            const workoutCount = Object.keys(workouts).length + 1;
            const newWorkoutName = `Workout ${workoutCount}`;
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'workout_functions.php', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function () {
                if (this.status === 200) {
                    const response = JSON.parse(this.responseText);
                    if (response.success) {
                        workouts = response.workouts;
                        updateWorkoutSelector();
                        generateCalendar(newWorkoutName);
                    } else {
                        alert('Error creating new workout: ' + response.message);
                    }
                }
            };
            xhr.send(`action=add_new_workout&workout_name=${encodeURIComponent(newWorkoutName)}`);
        });

        // Handle delete workout button
        document.getElementById('delete-workout-btn').addEventListener('click', function () {
            const workoutName = document.getElementById('workout-selector').value;
            if (!workoutName) {
                alert('Please select a workout template to delete.');
                return;
            }
            if (confirm(`Are you sure you want to delete "${workoutName}"?`)) {
                const xhr = new XMLHttpRequest();
                xhr.open('POST', 'workout_functions.php', true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (this.status === 200) {
                        const response = JSON.parse(this.responseText);
                        if (response.success) {
                            workouts = response.workouts;
                            updateWorkoutSelector();
                            generateCalendar(Object.keys(workouts)[0]);
                        } else {
                            alert('Error deleting workout: ' + response.message);
                        }
                    }
                };
                xhr.send(`action=delete_workout&workout_name=${encodeURIComponent(workoutName)}`);
            }
        });

        // Handle download button
        document.getElementById('download-btn').addEventListener('click', function () {
            const selectedWorkout = document.getElementById('workout-selector').value;
            if (!selectedWorkout) {
                alert('Please select a workout template to download.');
                return;
            }
            const currentWorkout = workouts[selectedWorkout];
            let content = `${selectedWorkout}\n`;
            days.forEach((day, index) => {
                content += `${day}:\n`;
                if (currentWorkout[index] && currentWorkout[index].length > 0) {
                    currentWorkout[index].forEach(workout => {
                        content += `- ${workout}\n`;
                    });
                } else {
                    content += "- No workouts scheduled\n";
                }
                content += "\n";
            });
            const blob = new Blob([content], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `${selectedWorkout}.txt`;
            a.click();
            URL.revokeObjectURL(url);
        });

        // Handle import button
document.getElementById('import-file').addEventListener('change', function (event) {
    const file = event.target.files[0];
    if (!file) {
        console.error('No file selected.');
        return;
    }

    const reader = new FileReader();
    reader.onload = function (e) {
        const content = e.target.result; // Read file content as text
        console.log('File Content:', content); // Log the file content

        const lines = content.split('\n'); // Split by newline character
        const workoutName = lines[0].trim(); // First line is the workout name
        console.log('Parsed Workout Name:', workoutName); // Log the workout name

        const importedWorkout = Array(7).fill([]); // Initialize empty days
        let currentDayIndex = -1;

        lines.slice(2).forEach((line, index) => {
            if (line.trim().endsWith(':')) {
                const dayName = line.trim().slice(0, -1); // Extract day name
                currentDayIndex = days.indexOf(dayName);
                console.log(`Parsed Day: ${dayName}, Index: ${currentDayIndex}`); // Log the day and index
            } else if (line.startsWith('- ')) {
                const workout = line.slice(2).trim(); // Extract workout activity
                if (workout && currentDayIndex !== -1) {
                    importedWorkout[currentDayIndex] = [...importedWorkout[currentDayIndex], workout];
                    console.log(`Added Workout: ${workout} to Day Index: ${currentDayIndex}`); // Log the added workout
                }
            }
        });

        console.log('Imported Workout Data:', importedWorkout); // Log the final imported data

        // Create AJAX request to import workout
        const xhr = new XMLHttpRequest();
        xhr.open('POST', 'workout_functions.php', true);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.onload = function () {
            if (this.status === 200) {
                const response = JSON.parse(this.responseText);
                console.log('Server Response:', response); // Log the server response
                if (response.success) {
                    workouts = response.workouts;
                    updateWorkoutSelector();
                    generateCalendar(workoutName);
                } else {
                    alert('Error importing workout: ' + response.message);
                }
            } else {
                alert('An unexpected error occurred while importing the workout.');
            }
        };

        xhr.send(`action=import_workout&workout_name=${encodeURIComponent(workoutName)}&workout_data=${encodeURIComponent(JSON.stringify(importedWorkout))}`);
    };

    reader.readAsText(file); // Read the file as text
});

        // Handle modal form submission
        document.getElementById('workout-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const selectedWorkout = document.getElementById('workout-selector').value;
            const dayIndex = document.getElementById('day-index').value;
            const workoutName = document.getElementById('workout-name').value;
            if (!selectedWorkout || dayIndex === '' || !workoutName) {
                alert('Please fill out all fields.');
                return;
            }
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'workout_functions.php', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function () {
                if (this.status === 200) {
                    const response = JSON.parse(this.responseText);
                    if (response.success) {
                        workouts = response.workouts;
                        generateCalendar(selectedWorkout);
                        document.getElementById('workout-modal').style.display = 'none';
                    } else {
                        alert('Error adding workout: ' + response.message);
                    }
                }
            };
            xhr.send(`action=add_workout&workout_name=${encodeURIComponent(selectedWorkout)}&day_index=${dayIndex}&workout_activity=${encodeURIComponent(workoutName)}`);
        });

        // Open workout modal
        function openWorkoutModal(workoutName, day, dayIndex) {
            document.getElementById('selected-day').textContent = day;
            document.getElementById('day-index').value = dayIndex;
            document.getElementById('workout-name').value = '';
            document.getElementById('workout-modal').style.display = 'block';
        }

        // Close modal when clicking on X
        document.querySelector('.close').onclick = function() {
            document.getElementById('workout-modal').style.display = 'none';
        };

        // Close modal when clicking outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('workout-modal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        };

        // Load workouts when page loads
        window.onload = function() {
            const xhr = new XMLHttpRequest();
            xhr.open('GET', 'workout_functions.php?action=get_workouts', true);
            xhr.onload = function() {
                if (this.status === 200) {
                    const response = JSON.parse(this.responseText);
                    if (response.success) {
                        workouts = response.workouts;
                        updateWorkoutSelector();
                        generateCalendar(Object.keys(workouts)[0]);
                    } else {
                        alert('Error loading workouts: ' + response.message);
                    }
                }
            };
            xhr.send();
        };

        // Helper function to save workouts to the backend
        function saveWorkoutsToBackend() {
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'workout_functions.php', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function () {
                if (this.status === 200) {
                    const response = JSON.parse(this.responseText);
                    if (!response.success) {
                        alert('Error saving workouts: ' + response.message);
                    }
                } else {
                    alert('An unexpected error occurred while saving workouts.');
                }
            };
            xhr.send(`action=save_workouts&workouts=${encodeURIComponent(JSON.stringify(workouts))}`);
        }
    </script>
</body>
</html>